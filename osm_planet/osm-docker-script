#!/bin/bash
# Runs a full OSM workflow inside a docker container. The working directory
# should be specified as an argument to this script.

cd "$1"

export NI_PAGER=cat

[[ -e osm-planet.lz4 ]] \
  || ni http://planet.openstreetmap.org/planet/planet-latest.osm.bz2 \
        z4\>osm-planet.lz4

[[ osm-nodes.lz4 -nt osm-planet.lz4 ]] \
  || ni osm-planet.lz4 \
        S12r/\<node/p'r /id="([^"]+)"/, /lat="([^"]+)"/, /lon="([^"]+)"/' \
        z4\>osm-nodes.lz4 &

[[ osm-ways.lz4 -nt osm-planet.lz4 ]] \
  || ni osm-planet.lz4 e[egrep -v '<node|</?changeset'] \
                       e[perl -ne 'print if /<way/../<\/way/'] \
        z4\>osm-ways.lz4 &

[[ osm-relations.lz4 -nt osm-planet.lz4 ]] \
  || ni osm-planet.lz4 e[egrep -v '<node|</?changeset'] \
                       e[perl -ne 'print if /<relation/../<\/relation/'] \
        z4\>osm-relations.lz4 &

wait

[[ -d node-tiles ]] \
  || { mkdir -p node-tiles
       ni osm-nodes.lz4 S12p'r "node-tiles/" . ghe(b, c, 3), b, c, a' \
          ^{row/sort-buffer=8192M row/sort-parallel=24} g W\> \
          e'xargs -P24 -n1 xz -9e'; } &

[[ -e osm-nodes-packed.QQ ]] \
  || ni osm-nodes.lz4 S24p'r a, ghe b, c, -60' \
        ^{row/sort-buffer=8192M row/sort-parallel=24} \
        op'wp"QQ", a, b' \>osm-nodes-packed.QQ

[[ -d tiles ]] \
  || { mkdir -p tiles
       ni osm-ways.lz4 e'tr "\n" " "' \
          e[ perl -e 'for (my $s = ""; read STDIN, $s, 1<<20, length $s;)
                      { print $1, "\n" if $s =~ s/(<way.*<\/way>)// }' ] \
          S24p'split /<\/way>/' \
          S24p'my ($way) = (my $l = $_) =~ /<way ((?:\w+="[^"]*"\s*)*)/;
               my $attrs = json_encode {$way =~ /(\w+)="([^"]*)"/g};
               my $tags  = json_encode {$l =~ /tag k="([^"]*)" v="([^"]*)"/g};
               r $attrs, $tags, /nd ref="(\d+)"/g' \
          S24p'^{ use Sys::Mmap;
                  open my $fh, "< osm-nodes-packed.QQ";
                  mmap $nodes, 0, PROT_READ, MAP_SHARED, $fh;
                  substr $nodes, $_ << 20, 1048576 for 0..length($nodes) >> 20 }
               r a, b, map bsflookup($nodes, "Q", 16, $_, "x8Q"), FR 2' \
          S24p'r "tiles/$_", F_ for uniq map gb3($_ >> 45, 15), FR 2' \
          ^{row/sort-buffer=8192M row/sort-parallel=24} \
          g W\> e'xargs -P24 -n1 xz 9e'; }

wait
